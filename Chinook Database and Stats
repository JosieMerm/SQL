#Show Customers (their full names, customer ID, and country) who are not in the US. 
SELECT FirstName, LastName, CustomerId, Country FROM chinook.customers WHERE Country != 'USA';

#Show only the Customers from Brazil.
SELECT FirstName, Lastname, CustomerId FROM chinook.customers WHERE Country == 'Brazil';

#Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.Firstname, customers.Lastname, invoices.CustomerId, invoices.InvoiceDate, invoices.BillingCountry FROM customers JOIN invoices ON customers.CustomerId = invoices.CustomerId WHERE customers.Country == 'Brazil';

#Show the Employees who are Sales Agents.
SELECT FirstName, LastName FROM employees WHERE Title == 'Sales Support Agent';

#Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry FROM invoices;

#Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.FirstName, employees.LastName, invoices.InvoiceId FROM customers JOIN employees ON customers.SupportRepId = employees.EmployeeId JOIN invoices ON customers.CustomerId = invoices.CustomerId WHERE employees.Title == 'Sales Support Agent' ORDER BY employees.EmployeeId;

#Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT customers.FirstName, customers.LastName, invoices.Total, employees.FirstName, employees.LastName, customers.Country FROM customers JOIN employees ON customers.SupportRepId = employees.EmployeeId JOIN invoices ON customers.CustomerId = invoices.CustomerId ORDER BY customers.FirstName, invoices.Total;

#How many Invoices were there in 2009?
SELECT COUNT(InvoiceId) FROM invoices WHERE invoices.InvoiceDate LIKE '2009%';

#What are the total sales for 2009?
SELECT SUM(Total) FROM invoices WHERE invoices.InvoiceDate LIKE '2009%';

#Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name, invoice_items.InvoiceLineId FROM tracks JOIN invoice_items ON tracks.TrackId = invoice_items.TrackId;

#Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.Name AS track, artists.Name AS artist, invoice_items.InvoiceLineId FROM invoice_items JOIN tracks ON invoice_items.TrackId = tracks.TrackId JOIN albums ON tracks.AlbumId = albums.AlbumId JOIN artists ON albums.ArtistId = artists.ArtistId ORDER BY invoice_items.InvoiceLineId;

#Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.name AS track, albums.Title AS album, media_types.Name AS media_types, genres.Name AS genre FROM tracks JOIN albums ON tracks.AlbumId = albums.AlbumId JOIN media_types ON tracks.MediaTypeId = media_types.MediaTypeId JOIN genres ON tracks.GenreId = genres.GenreId;

#Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName, SUM(invoices.Total) AS total FROM invoices JOIN customers ON invoices.CustomerId = customers.CustomerId JOIN employees ON customers.SupportRepId = employees.EmployeeId GROUP BY customers.SupportRepId;

#Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName, employees.LastName, SUM(invoices.Total) AS total FROM invoices JOIN customers ON invoices.CustomerId = customers.CustomerId JOIN employees ON customers.SupportRepId = employees.EmployeeId WHERE invoices.InvoiceDate LIKE '2009%' GROUP BY customers.SupportRepId ORDER BY total DESC LIMIT 1;

#Which playlist has the most tracks and how many tracks are on it?
SELECT DISTINCT playlists.Name, COUNT(playlist_track.PlaylistId) FROM playlists JOIN playlist_track ON playlists.PlaylistId = playlist_track.PlaylistId GROUP BY playlist_track.PlaylistId ORDER BY COUNT(playlist_track.PlaylistId) DESC;

#What are the names of the tracks on the "TV Shows" playlist?
SELECT name FROM tracks WHERE trackid IN (SELECT DISTINCT playlist_track.TrackId FROM playlist_track JOIN playlists ON playlist_track.PlaylistId = playlists.PlaylistId WHERE playlists.Name = 'TV Shows');

#What is the most popular genre?
SELECT name FROM genres WHERE genreid IN (SELECT genreid FROM tracks GROUP BY genreid ORDER BY COUNT(genreid) DESC LIMIT 1); 

#What customer has spent the most money overall and how much money have they spent?
SELECT customers.FirstName, customers.LastName, SUM(invoices.total) FROM customers JOIN invoices ON customers.CustomerId = invoices.CustomerId GROUP BY invoices.customerid ORDER BY SUM(invoices.total) DESC LIMIT 1;

#Who is the most purchased artist?
SELECT artists.Name, COUNT(artists.name) FROM artists JOIN albums ON artists.ArtistId = albums.ArtistId WHERE albumid IN (SELECT albumid FROM tracks JOIN invoice_items ON tracks.TrackId = invoice_items.TrackId) GROUP BY artists.name ORDER BY COUNT(artists.name) DESC;
